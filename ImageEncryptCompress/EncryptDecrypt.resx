<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QBuRXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAAZKG
        AAcAAAA6AAAALAAAAABMAEUAQQBEACAAVABlAGMAaABuAG8AbABvAGcAaQBlAHMAIABJAG4AYwAuACAA
        VgAxAC4AMAAxAAAA/9sAQwAIBgYHBgUIBwcHCQkICgwUDQwLCwwZEhMPFB0aHx4dGhwcICQuJyAiLCMc
        HCg3KSwwMTQ0NB8nOT04MjwuMzQy/9sAQwEJCQkMCwwYDQ0YMiEcITIyMjIyMjIyMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy/8AAEQgAxwCtAwEiAAIRAQMRAf/EAB8AAAEFAQEB
        AQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQci
        cRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVm
        Z2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV
        1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//E
        ALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDTh
        JfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKT
        lJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5
        +v/aAAwDAQACEQMRAD8A+f6KKKACiiigAooooAKKK9A8HfC7UPEMUd9qDtY6c3KkrmSUeqg9B7n8AaAP
        P8Vo2mg6vfgGz0u8nB6GOBmH54r6P0XwT4e0FF+xaZCZV/5bTDzJD+J6fhiugycYycelAHzGvgHxYwyN
        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
        /M0UUAVaKKKACiiigAooooAKKKKACiiigD//2Q==
</value>
  </data>
</root>